Q: How is the width of the element calculated for the percentage value?
A:
   🔹<style>
        .container {
          background-color: #aaffd;
          padding: 30px 0;
          width: 100px;  -----> parentWidthPx
        }
        .block {
          background-color: #abbfd;
          height: 10px;
          width: 20%; -----> parentWidthPx * (childWidthPercentage/100 -> decimal) 
          -----> 100px*(20/100)= 100px*0.2 = 20px {20 x 10}
          width: 22%; -----> parentWidthPx * (childWidthPercentage/100 -> decimal) 
          -----> 100px*(22/100)= 100px*0.22 = 22px {22 x 10}
        }
      </style>

   🔹<div class="container">
        <div class="block">
        
        </div>
      </div>
--------------------------------------------------------------------------------------------
Q: Is it possible to set borders and paddings on one side? Are there exceptions?
A: --> `Padding`s can be set on one side:
  🔸padding-top: 20px;
    padding-bottom: 20px;

  --> `Border`s can be set on one side:
  🔸border-top: 10px solid red; 
    border-right: 10px solid green;

These properties can be set as-> {padding: top right bottom left} and {border: 2px solid pink}
    
    `EXCEPTIONS`
   🔸 outline: 15px solid blue; -> set only 4 sides, CAN'T set to-> top right bottom left
---------------------------------------------------------------------------------------------
Q: Will the content of the item be visible when it is not contained in the item size? 
How change this behavior?

A:🔹In this case the item will be visible: parent < child (🧒c > can be bigger size than 🧑p)
By default: 
`overflow`: auto == `overflow`: visible (so 🧒c visible upon 🧑p)
`overflow`: auto | hidden | scroll | visible 

  🔸To change the behavior:
  `overflow`: hidden (set 🧒c width == 🧑p width, 
  even if 🧒c >🧑p, 🧒c content cuts itself by the 🧑p showing limit/width)

  `overflow`: scroll (set the scrolling element|s (vertical/horizontal line|s) to 🧑p)
  even if 🧒c >🧑p, 🧒c content cuts itself by the 🧑p showing limit/width BUT other
  🧒c content can be scrolled in the 🧑p by the scrolling line|s and shown in its fully meaning

---------------------------------------------------------------------------------------------
Q: How are the dimensions of the element formed? Explain the nuances.
A: 📍By default, `box-sizing` sets to "content-box" --> width=content (content takes FULL width)

Q: Explain the work of `box-sizing` quality.
A: 📍`box-sizing` quality can change calculating of the element to:
     `box-sizing`: content-box (default) --> width: 100px
     🔸content (width:100px)
     🔸padding*2 <| =100px= |>           <-mrgn brd|<pd| =100px= |pd>|brd mrgn->
     🔸border*2 | == |

     `box-sizing`: border-box --> width: 100px
     🔹content (70px)
     🔹padding*2 |< =70px= >|            <-mrgn |brd <pd =70px= pd> brd| mrgn->
     🔹border*2 | == |